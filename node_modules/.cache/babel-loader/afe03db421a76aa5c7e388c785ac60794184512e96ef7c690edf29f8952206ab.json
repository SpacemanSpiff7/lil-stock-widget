{"ast":null,"code":"// src/DataFetch.ts\nexport class DataFetcher{constructor(){this.apiKey=null;this.provider='alphavantage';this.apiKey=sessionStorage.getItem('finance-api-key');}setApiKey(key,provider){this.apiKey=key;this.provider=provider;sessionStorage.setItem('finance-api-key',key);sessionStorage.setItem('finance-api-provider',provider);}clearApiKey(){this.apiKey=null;sessionStorage.removeItem('finance-api-key');sessionStorage.removeItem('finance-api-provider');}hasApiKey(){return!!this.apiKey;}async fetchStockData(ticker){let timeline=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'1y';if(!this.apiKey){throw new Error('API key not set');}const provider=sessionStorage.getItem('finance-api-provider')||'alphavantage';if(provider==='alphavantage'){return this.fetchFromAlphaVantage(ticker,timeline);}else{return this.fetchFromPolygon(ticker,timeline);}}async fetchFromAlphaVantage(ticker){let timeline=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'1y';const timeSeriesUrl=`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${ticker}&apikey=${this.apiKey}&outputsize=full`;const overviewUrl=`https://www.alphavantage.co/query?function=OVERVIEW&symbol=${ticker}&apikey=${this.apiKey}`;try{var _prices;const[timeSeriesResponse,overviewResponse]=await Promise.all([fetch(timeSeriesUrl),fetch(overviewUrl)]);const timeSeriesData=await timeSeriesResponse.json();const overviewData=await overviewResponse.json();if(timeSeriesData.Note){throw new Error('Rate limit exceeded. Please wait and try again.');}if(timeSeriesData.Error){throw new Error(timeSeriesData.Error);}const timeSeries=timeSeriesData['Time Series (Daily)'];if(!timeSeries){throw new Error('Invalid ticker symbol or no data available');}const dates=Object.keys(timeSeries).sort();const prices=dates.map(date=>({date:new Date(date),open:parseFloat(timeSeries[date]['1. open']),high:parseFloat(timeSeries[date]['2. high']),low:parseFloat(timeSeries[date]['3. low']),close:parseFloat(timeSeries[date]['4. close']),volume:parseInt(timeSeries[date]['5. volume'])}));const latestPrice=((_prices=prices[prices.length-1])===null||_prices===void 0?void 0:_prices.close)||0;return{ticker,currentPrice:latestPrice,prices,fundamentals:{pe:parseFloat(overviewData.PERatio)||null,pb:parseFloat(overviewData.PriceToBookRatio)||null,peg:parseFloat(overviewData.PEGRatio)||null,dividendYield:parseFloat(overviewData.DividendYield)||null,marketCap:parseFloat(overviewData.MarketCapitalization)||null,eps:parseFloat(overviewData.EPS)||null}};}catch(error){if(error instanceof Error){throw error;}throw new Error('Failed to fetch stock data');}}async fetchFromPolygon(ticker){let timeline=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'1y';const endDate=new Date().toISOString().split('T')[0];// Calculate start date based on timeline\nlet daysBack;switch(timeline){case'1d':daysBack=1;break;case'1w':daysBack=7;break;case'1m':daysBack=30;break;case'6m':daysBack=180;break;case'1y':daysBack=365;break;case'2y':daysBack=730;break;case'5y':daysBack=1825;break;case'max':daysBack=3650;// 10 years max\nbreak;default:daysBack=365;}const startDate=new Date(Date.now()-daysBack*24*60*60*1000).toISOString().split('T')[0];const aggregatesUrl=`https://api.polygon.io/v2/aggs/ticker/${ticker}/range/1/day/${startDate}/${endDate}?adjusted=true&sort=asc&limit=50000&apikey=${this.apiKey}`;const tickerDetailsUrl=`https://api.polygon.io/v3/reference/tickers/${ticker}?apikey=${this.apiKey}`;const financialsUrl=`https://api.polygon.io/v2/reference/financials/${ticker}?apikey=${this.apiKey}`;try{var _prices2;const[aggregatesResponse,tickerDetailsResponse,financialsResponse]=await Promise.all([fetch(aggregatesUrl),fetch(tickerDetailsUrl),fetch(financialsUrl)]);const aggregatesData=await aggregatesResponse.json();const tickerDetailsData=await tickerDetailsResponse.json();const financialsData=await financialsResponse.json();if(aggregatesData.status==='ERROR'){throw new Error(aggregatesData.error||'API error');}if(!aggregatesData.results||aggregatesData.results.length===0){throw new Error('No data available for this ticker');}const prices=aggregatesData.results.map(result=>({date:new Date(result.t),open:result.o,high:result.h,low:result.l,close:result.c,volume:result.v}));const latestPrice=((_prices2=prices[prices.length-1])===null||_prices2===void 0?void 0:_prices2.close)||0;// Extract fundamental data\nlet fundamentals={pe:null,pb:null,peg:null,dividendYield:null,marketCap:null,eps:null};// Get market cap from ticker details\nif(tickerDetailsData.results&&!tickerDetailsData.error){const details=tickerDetailsData.results;fundamentals.marketCap=details.market_cap||null;}// Get financial metrics from financials data\nif(financialsData.results&&financialsData.results.length>0&&!financialsData.error){const latestFinancials=financialsData.results[0];// Calculate P/E ratio if we have earnings data\nif(latestFinancials.earnings_per_share&&latestPrice>0){fundamentals.eps=latestFinancials.earnings_per_share;fundamentals.pe=latestPrice/latestFinancials.earnings_per_share;}// Get other metrics if available\nif(latestFinancials.price_to_book){fundamentals.pb=latestFinancials.price_to_book;}if(latestFinancials.price_to_earnings_growth){fundamentals.peg=latestFinancials.price_to_earnings_growth;}if(latestFinancials.dividend_yield){fundamentals.dividendYield=latestFinancials.dividend_yield;}}return{ticker,currentPrice:latestPrice,prices,fundamentals};}catch(error){if(error instanceof Error){throw error;}throw new Error('Failed to fetch stock data from Polygon');}}}","map":{"version":3,"names":["DataFetcher","constructor","apiKey","provider","sessionStorage","getItem","setApiKey","key","setItem","clearApiKey","removeItem","hasApiKey","fetchStockData","ticker","timeline","arguments","length","undefined","Error","fetchFromAlphaVantage","fetchFromPolygon","timeSeriesUrl","overviewUrl","_prices","timeSeriesResponse","overviewResponse","Promise","all","fetch","timeSeriesData","json","overviewData","Note","timeSeries","dates","Object","keys","sort","prices","map","date","Date","open","parseFloat","high","low","close","volume","parseInt","latestPrice","currentPrice","fundamentals","pe","PERatio","pb","PriceToBookRatio","peg","PEGRatio","dividendYield","DividendYield","marketCap","MarketCapitalization","eps","EPS","error","endDate","toISOString","split","daysBack","startDate","now","aggregatesUrl","tickerDetailsUrl","financialsUrl","_prices2","aggregatesResponse","tickerDetailsResponse","financialsResponse","aggregatesData","tickerDetailsData","financialsData","status","results","result","t","o","h","l","c","v","details","market_cap","latestFinancials","earnings_per_share","price_to_book","price_to_earnings_growth","dividend_yield"],"sources":["/Users/slongo/Documents/simone_misc/stock_widget/src/DataFetch.ts"],"sourcesContent":["// src/DataFetch.ts\nexport type ApiProvider = 'alphavantage' | 'polygon';\n\nexport interface PricePoint {\n  date: Date;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n}\n\nexport interface Fundamentals {\n  pe: number | null;\n  pb: number | null;\n  peg: number | null;\n  dividendYield: number | null;\n  marketCap: number | null;\n  eps: number | null;\n}\n\nexport interface StockData {\n  ticker: string;\n  currentPrice: number;\n  prices: PricePoint[];\n  fundamentals: Fundamentals;\n}\n\nexport class DataFetcher {\n  private apiKey: string | null = null;\n  private provider: ApiProvider = 'alphavantage';\n\n  constructor() {\n    this.apiKey = sessionStorage.getItem('finance-api-key');\n  }\n\n  setApiKey(key: string, provider: ApiProvider) {\n    this.apiKey = key;\n    this.provider = provider;\n    sessionStorage.setItem('finance-api-key', key);\n    sessionStorage.setItem('finance-api-provider', provider);\n  }\n\n  clearApiKey() {\n    this.apiKey = null;\n    sessionStorage.removeItem('finance-api-key');\n    sessionStorage.removeItem('finance-api-provider');\n  }\n\n  hasApiKey(): boolean {\n    return !!this.apiKey;\n  }\n\n  async fetchStockData(ticker: string, timeline: string = '1y'): Promise<StockData> {\n    if (!this.apiKey) {\n      throw new Error('API key not set');\n    }\n\n    const provider = sessionStorage.getItem('finance-api-provider') as ApiProvider || 'alphavantage';\n    \n    if (provider === 'alphavantage') {\n      return this.fetchFromAlphaVantage(ticker, timeline);\n    } else {\n      return this.fetchFromPolygon(ticker, timeline);\n    }\n  }\n\n  private async fetchFromAlphaVantage(ticker: string, timeline: string = '1y'): Promise<StockData> {\n    const timeSeriesUrl = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${ticker}&apikey=${this.apiKey}&outputsize=full`;\n    const overviewUrl = `https://www.alphavantage.co/query?function=OVERVIEW&symbol=${ticker}&apikey=${this.apiKey}`;\n\n    try {\n      const [timeSeriesResponse, overviewResponse] = await Promise.all([\n        fetch(timeSeriesUrl),\n        fetch(overviewUrl)\n      ]);\n\n      const timeSeriesData = await timeSeriesResponse.json();\n      const overviewData = await overviewResponse.json();\n\n      if (timeSeriesData.Note) {\n        throw new Error('Rate limit exceeded. Please wait and try again.');\n      }\n\n      if (timeSeriesData.Error) {\n        throw new Error(timeSeriesData.Error);\n      }\n\n      const timeSeries = timeSeriesData['Time Series (Daily)'];\n      if (!timeSeries) {\n        throw new Error('Invalid ticker symbol or no data available');\n      }\n\n      const dates = Object.keys(timeSeries).sort();\n      const prices = dates.map(date => ({\n        date: new Date(date),\n        open: parseFloat(timeSeries[date]['1. open']),\n        high: parseFloat(timeSeries[date]['2. high']),\n        low: parseFloat(timeSeries[date]['3. low']),\n        close: parseFloat(timeSeries[date]['4. close']),\n        volume: parseInt(timeSeries[date]['5. volume'])\n      }));\n\n      const latestPrice = prices[prices.length - 1]?.close || 0;\n\n      return {\n        ticker,\n        currentPrice: latestPrice,\n        prices,\n        fundamentals: {\n          pe: parseFloat(overviewData.PERatio) || null,\n          pb: parseFloat(overviewData.PriceToBookRatio) || null,\n          peg: parseFloat(overviewData.PEGRatio) || null,\n          dividendYield: parseFloat(overviewData.DividendYield) || null,\n          marketCap: parseFloat(overviewData.MarketCapitalization) || null,\n          eps: parseFloat(overviewData.EPS) || null\n        }\n      };\n    } catch (error) {\n      if (error instanceof Error) {\n        throw error;\n      }\n      throw new Error('Failed to fetch stock data');\n    }\n  }\n\n  private async fetchFromPolygon(ticker: string, timeline: string = '1y'): Promise<StockData> {\n    const endDate = new Date().toISOString().split('T')[0];\n    \n    // Calculate start date based on timeline\n    let daysBack: number;\n    switch (timeline) {\n      case '1d':\n        daysBack = 1;\n        break;\n      case '1w':\n        daysBack = 7;\n        break;\n      case '1m':\n        daysBack = 30;\n        break;\n      case '6m':\n        daysBack = 180;\n        break;\n      case '1y':\n        daysBack = 365;\n        break;\n      case '2y':\n        daysBack = 730;\n        break;\n      case '5y':\n        daysBack = 1825;\n        break;\n      case 'max':\n        daysBack = 3650; // 10 years max\n        break;\n      default:\n        daysBack = 365;\n    }\n    \n    const startDate = new Date(Date.now() - daysBack * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n    \n    const aggregatesUrl = `https://api.polygon.io/v2/aggs/ticker/${ticker}/range/1/day/${startDate}/${endDate}?adjusted=true&sort=asc&limit=50000&apikey=${this.apiKey}`;\n    const tickerDetailsUrl = `https://api.polygon.io/v3/reference/tickers/${ticker}?apikey=${this.apiKey}`;\n    const financialsUrl = `https://api.polygon.io/v2/reference/financials/${ticker}?apikey=${this.apiKey}`;\n\n    try {\n      const [aggregatesResponse, tickerDetailsResponse, financialsResponse] = await Promise.all([\n        fetch(aggregatesUrl),\n        fetch(tickerDetailsUrl),\n        fetch(financialsUrl)\n      ]);\n\n      const aggregatesData = await aggregatesResponse.json();\n      const tickerDetailsData = await tickerDetailsResponse.json();\n      const financialsData = await financialsResponse.json();\n\n      if (aggregatesData.status === 'ERROR') {\n        throw new Error(aggregatesData.error || 'API error');\n      }\n\n      if (!aggregatesData.results || aggregatesData.results.length === 0) {\n        throw new Error('No data available for this ticker');\n      }\n\n      const prices = aggregatesData.results.map((result: any) => ({\n        date: new Date(result.t),\n        open: result.o,\n        high: result.h,\n        low: result.l,\n        close: result.c,\n        volume: result.v\n      }));\n\n      const latestPrice = prices[prices.length - 1]?.close || 0;\n\n      // Extract fundamental data\n      let fundamentals: Fundamentals = {\n        pe: null,\n        pb: null,\n        peg: null,\n        dividendYield: null,\n        marketCap: null,\n        eps: null\n      };\n\n      // Get market cap from ticker details\n      if (tickerDetailsData.results && !tickerDetailsData.error) {\n        const details = tickerDetailsData.results;\n        fundamentals.marketCap = details.market_cap || null;\n      }\n\n      // Get financial metrics from financials data\n      if (financialsData.results && financialsData.results.length > 0 && !financialsData.error) {\n        const latestFinancials = financialsData.results[0];\n        \n        // Calculate P/E ratio if we have earnings data\n        if (latestFinancials.earnings_per_share && latestPrice > 0) {\n          fundamentals.eps = latestFinancials.earnings_per_share;\n          fundamentals.pe = latestPrice / latestFinancials.earnings_per_share;\n        }\n\n        // Get other metrics if available\n        if (latestFinancials.price_to_book) {\n          fundamentals.pb = latestFinancials.price_to_book;\n        }\n\n        if (latestFinancials.price_to_earnings_growth) {\n          fundamentals.peg = latestFinancials.price_to_earnings_growth;\n        }\n\n        if (latestFinancials.dividend_yield) {\n          fundamentals.dividendYield = latestFinancials.dividend_yield;\n        }\n      }\n\n      return {\n        ticker,\n        currentPrice: latestPrice,\n        prices,\n        fundamentals\n      };\n    } catch (error) {\n      if (error instanceof Error) {\n        throw error;\n      }\n      throw new Error('Failed to fetch stock data from Polygon');\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}