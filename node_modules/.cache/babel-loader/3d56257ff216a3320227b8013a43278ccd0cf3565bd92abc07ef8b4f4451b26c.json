{"ast":null,"code":"// src/Charts.tsx\nimport React,{useEffect,useRef}from'react';// Declare Plotly as global\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const HistoricalChart=_ref=>{let{prices,trend,isDarkMode}=_ref;const chartRef=useRef(null);useEffect(()=>{if(!chartRef.current||prices.length===0||!window.Plotly)return;const dates=prices.map(p=>p.date.toISOString().split('T')[0]);const closes=prices.map(p=>p.close);const opens=prices.map(p=>p.open);const highs=prices.map(p=>p.high);const lows=prices.map(p=>p.low);// Create trend line\nconst trendLine=Array.from({length:prices.length},(_,i)=>{const progress=i/(prices.length-1);return closes[0]+(trend-closes[0])*progress;});const candlestickTrace={x:dates,open:opens,high:highs,low:lows,close:closes,type:'candlestick',name:'Price',increasing:{line:{color:'#00ff88'}},decreasing:{line:{color:'#ff4444'}}};const trendTrace={x:dates,y:trendLine,type:'scatter',mode:'lines',name:'Trend',line:{color:'#ffa500',width:2,dash:'dash'}};const layout={title:'Historical Price with Trend',xaxis:{title:'Date'},yaxis:{title:'Price ($)'},paper_bgcolor:isDarkMode?'#1a1a1a':'white',plot_bgcolor:isDarkMode?'#2d2d2d':'white',font:{color:isDarkMode?'white':'black'}};window.Plotly.newPlot(chartRef.current,[candlestickTrace,trendTrace],layout);},[prices,trend,isDarkMode]);return/*#__PURE__*/_jsx(\"div\",{ref:chartRef,className:\"w-full h-96\"});};export const VolatilityChart=_ref2=>{let{prices,volatilities,regimes,isDarkMode}=_ref2;const chartRef=useRef(null);useEffect(()=>{if(!chartRef.current||prices.length===0||!window.Plotly)return;const dates=prices.map(p=>p.date.toISOString().split('T')[0]);const closes=prices.map(p=>p.close);// Create background shading for regimes\nconst shapes=[];let currentRegime=regimes[0];let shapeStart=0;for(let i=1;i<regimes.length;i++){if(regimes[i]!==currentRegime){shapes.push({type:'rect',xref:'x',yref:'paper',x0:dates[shapeStart],x1:dates[i-1],y0:0,y1:1,fillcolor:currentRegime>0?'rgba(0, 255, 136, 0.1)':'rgba(255, 68, 68, 0.1)',line:{width:0}});shapeStart=i;currentRegime=regimes[i];}}// Add final shape\nshapes.push({type:'rect',xref:'x',yref:'paper',x0:dates[shapeStart],x1:dates[dates.length-1],y0:0,y1:1,fillcolor:currentRegime>0?'rgba(0, 255, 136, 0.1)':'rgba(255, 68, 68, 0.1)',line:{width:0}});const priceTrace={x:dates,y:closes,type:'scatter',mode:'lines',name:'Price',line:{color:'#4a90e2'},yaxis:'y'};const volatilityTrace={x:dates.slice(1),// Volatility has one less point\ny:volatilities.map(v=>v*100),// Convert to percentage\ntype:'scatter',mode:'lines',name:'Volatility (%)',line:{color:'#ff6b6b'},yaxis:'y2'};const layout={title:'Price with Rolling Volatility and Regime Detection',xaxis:{title:'Date'},yaxis:{title:'Price ($)',side:'left'},yaxis2:{title:'Volatility (%)',overlaying:'y',side:'right'},shapes,paper_bgcolor:isDarkMode?'#1a1a1a':'white',plot_bgcolor:isDarkMode?'#2d2d2d':'white',font:{color:isDarkMode?'white':'black'}};window.Plotly.newPlot(chartRef.current,[priceTrace,volatilityTrace],layout);},[prices,volatilities,regimes,isDarkMode]);return/*#__PURE__*/_jsx(\"div\",{ref:chartRef,className:\"w-full h-96\"});};export const MonteCarloPathsChart=_ref3=>{let{paths,initialPrice,isDarkMode}=_ref3;const chartRef=useRef(null);useEffect(()=>{if(!chartRef.current||paths.length===0||!window.Plotly)return;const numSteps=paths[0].length;const xValues=Array.from({length:numSteps},(_,i)=>i);// Plot first 50 paths with transparency\nconst traces=paths.slice(0,50).map((path,i)=>({x:xValues,y:path,type:'scatter',mode:'lines',name:`Path ${i+1}`,line:{color:`rgba(74, 144, 226, 0.3)`,width:1},showlegend:false}));// Add upside and downside reference lines\nconst upsideLine={x:[0,numSteps-1],y:[initialPrice*1.2,initialPrice*1.2],type:'scatter',mode:'lines',name:'+20% Target',line:{color:'#00ff88',width:2,dash:'dash'}};const downsideLine={x:[0,numSteps-1],y:[initialPrice*0.9,initialPrice*0.9],type:'scatter',mode:'lines',name:'-10% Stop',line:{color:'#ff4444',width:2,dash:'dash'}};const layout={title:'Monte Carlo Price Paths (50 sample paths)',xaxis:{title:'Days'},yaxis:{title:'Price ($)'},paper_bgcolor:isDarkMode?'#1a1a1a':'white',plot_bgcolor:isDarkMode?'#2d2d2d':'white',font:{color:isDarkMode?'white':'black'}};window.Plotly.newPlot(chartRef.current,[...traces,upsideLine,downsideLine],layout);},[paths,initialPrice,isDarkMode]);return/*#__PURE__*/_jsx(\"div\",{ref:chartRef,className:\"w-full h-96\"});};export const DistributionChart=_ref4=>{let{histogram,initialPrice,isDarkMode}=_ref4;const chartRef=useRef(null);useEffect(()=>{if(!chartRef.current||histogram.length===0||!window.Plotly)return;const histogramTrace={x:histogram.map(h=>h.bin),y:histogram.map(h=>h.count),type:'bar',name:'Distribution',marker:{color:'#4a90e2',opacity:0.7}};const upsideLine={x:[initialPrice*1.2,initialPrice*1.2],y:[0,Math.max(...histogram.map(h=>h.count))],type:'scatter',mode:'lines',name:'+20% Target',line:{color:'#00ff88',width:3}};const downsideLine={x:[initialPrice*0.9,initialPrice*0.9],y:[0,Math.max(...histogram.map(h=>h.count))],type:'scatter',mode:'lines',name:'-10% Stop',line:{color:'#ff4444',width:3}};const layout={title:'Distribution of Final Prices',xaxis:{title:'Price ($)'},yaxis:{title:'Frequency'},paper_bgcolor:isDarkMode?'#1a1a1a':'white',plot_bgcolor:isDarkMode?'#2d2d2d':'white',font:{color:isDarkMode?'white':'black'}};window.Plotly.newPlot(chartRef.current,[histogramTrace,upsideLine,downsideLine],layout);},[histogram,initialPrice,isDarkMode]);return/*#__PURE__*/_jsx(\"div\",{ref:chartRef,className:\"w-full h-96\"});};// New advanced chart components\nexport const PerformanceMetricsChart=_ref5=>{let{metrics,isDarkMode}=_ref5;const chartRef=useRef(null);useEffect(()=>{if(!chartRef.current||!window.Plotly)return;const metricNames=['Sharpe','Sortino','Calmar','Information','Treynor'];const metricValues=[metrics.sharpeRatio,metrics.sortinoRatio,metrics.calmarRatio,metrics.informationRatio,metrics.treynorRatio];const trace={x:metricNames,y:metricValues,type:'bar',marker:{color:metricValues.map(v=>v>0?'#00ff88':'#ff4444'),opacity:0.8},name:'Performance Ratios'};const layout={title:'Performance Metrics',xaxis:{title:'Metric'},yaxis:{title:'Ratio Value'},paper_bgcolor:isDarkMode?'#1a1a1a':'white',plot_bgcolor:isDarkMode?'#2d2d2d':'white',font:{color:isDarkMode?'white':'black'}};window.Plotly.newPlot(chartRef.current,[trace],layout);},[metrics,isDarkMode]);return/*#__PURE__*/_jsx(\"div\",{ref:chartRef,className:\"w-full h-96\"});};export const StressTestChart=_ref6=>{let{results,isDarkMode}=_ref6;const chartRef=useRef(null);useEffect(()=>{if(!chartRef.current||results.length===0||!window.Plotly)return;const scenarioNames=results.map(r=>r.scenario.name);const var95Values=results.map(r=>r.var95);const var99Values=results.map(r=>r.var99);const var95Trace={x:scenarioNames,y:var95Values,type:'bar',name:'VaR (95%)',marker:{color:'#ff6b6b',opacity:0.8}};const var99Trace={x:scenarioNames,y:var99Values,type:'bar',name:'VaR (99%)',marker:{color:'#ff4444',opacity:0.8}};const layout={title:'Stress Test Results',xaxis:{title:'Scenario'},yaxis:{title:'Value at Risk ($)'},barmode:'group',paper_bgcolor:isDarkMode?'#1a1a1a':'white',plot_bgcolor:isDarkMode?'#2d2d2d':'white',font:{color:isDarkMode?'white':'black'}};window.Plotly.newPlot(chartRef.current,[var95Trace,var99Trace],layout);},[results,isDarkMode]);return/*#__PURE__*/_jsx(\"div\",{ref:chartRef,className:\"w-full h-96\"});};export const RegimeAnalysisChart=_ref7=>{let{analysis,isDarkMode}=_ref7;const chartRef=useRef(null);useEffect(()=>{if(!chartRef.current||!window.Plotly)return;// Create multiple subplots\nconst fig={data:[// Regime probabilities pie chart\n{values:[analysis.bullMarketProbability,analysis.bearMarketProbability],labels:['Bull Market','Bear Market'],type:'pie',name:'Regime Probabilities',domain:{row:0,column:0},marker:{colors:['#00ff88','#ff4444']}},// Regime durations bar chart\n{x:['Bull','Bear'],y:[analysis.regimeDuration.bull,analysis.regimeDuration.bear],type:'bar',name:'Avg Duration (days)',domain:{row:0,column:1},marker:{color:['#00ff88','#ff4444']}},// Regime volatility\n{x:['Bull','Bear'],y:[analysis.regimeVolatility.bull*100,analysis.regimeVolatility.bear*100],type:'bar',name:'Volatility (%)',domain:{row:1,column:0},marker:{color:['#4a90e2','#ff6b6b']}},// Regime returns\n{x:['Bull','Bear'],y:[analysis.regimeReturns.bull*100,analysis.regimeReturns.bear*100],type:'bar',name:'Returns (%)',domain:{row:1,column:1},marker:{color:['#00ff88','#ff4444']}}],layout:{title:'Regime Analysis',grid:{rows:2,columns:2,pattern:'independent'},paper_bgcolor:isDarkMode?'#1a1a1a':'white',plot_bgcolor:isDarkMode?'#2d2d2d':'white',font:{color:isDarkMode?'white':'black'}}};window.Plotly.newPlot(chartRef.current,fig.data,fig.layout);},[analysis,isDarkMode]);return/*#__PURE__*/_jsx(\"div\",{ref:chartRef,className:\"w-full h-96\"});};","map":{"version":3,"names":["React","useEffect","useRef","jsx","_jsx","HistoricalChart","_ref","prices","trend","isDarkMode","chartRef","current","length","window","Plotly","dates","map","p","date","toISOString","split","closes","close","opens","open","highs","high","lows","low","trendLine","Array","from","_","i","progress","candlestickTrace","x","type","name","increasing","line","color","decreasing","trendTrace","y","mode","width","dash","layout","title","xaxis","yaxis","paper_bgcolor","plot_bgcolor","font","newPlot","ref","className","VolatilityChart","_ref2","volatilities","regimes","shapes","currentRegime","shapeStart","push","xref","yref","x0","x1","y0","y1","fillcolor","priceTrace","volatilityTrace","slice","v","side","yaxis2","overlaying","MonteCarloPathsChart","_ref3","paths","initialPrice","numSteps","xValues","traces","path","showlegend","upsideLine","downsideLine","DistributionChart","_ref4","histogram","histogramTrace","h","bin","count","marker","opacity","Math","max","PerformanceMetricsChart","_ref5","metrics","metricNames","metricValues","sharpeRatio","sortinoRatio","calmarRatio","informationRatio","treynorRatio","trace","StressTestChart","_ref6","results","scenarioNames","r","scenario","var95Values","var95","var99Values","var99","var95Trace","var99Trace","barmode","RegimeAnalysisChart","_ref7","analysis","fig","data","values","bullMarketProbability","bearMarketProbability","labels","domain","row","column","colors","regimeDuration","bull","bear","regimeVolatility","regimeReturns","grid","rows","columns","pattern"],"sources":["/Users/slongo/Documents/simone_misc/stock_widget/src/Charts.tsx"],"sourcesContent":["// src/Charts.tsx\nimport React, { useEffect, useRef } from 'react';\nimport { PricePoint } from './DataFetch';\nimport { PerformanceMetrics, StressTestResult, RegimeAnalysis } from './types';\n\n// Declare Plotly as global\ndeclare global {\n  interface Window {\n    Plotly: any;\n  }\n}\n\ninterface HistoricalChartProps {\n  prices: PricePoint[];\n  trend: number;\n  isDarkMode: boolean;\n}\n\nexport const HistoricalChart: React.FC<HistoricalChartProps> = ({ prices, trend, isDarkMode }) => {\n  const chartRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!chartRef.current || prices.length === 0 || !window.Plotly) return;\n\n    const dates = prices.map(p => p.date.toISOString().split('T')[0]);\n    const closes = prices.map(p => p.close);\n    const opens = prices.map(p => p.open);\n    const highs = prices.map(p => p.high);\n    const lows = prices.map(p => p.low);\n\n    // Create trend line\n    const trendLine = Array.from({ length: prices.length }, (_, i) => {\n      const progress = i / (prices.length - 1);\n      return closes[0] + (trend - closes[0]) * progress;\n    });\n\n    const candlestickTrace = {\n      x: dates,\n      open: opens,\n      high: highs,\n      low: lows,\n      close: closes,\n      type: 'candlestick',\n      name: 'Price',\n      increasing: { line: { color: '#00ff88' } },\n      decreasing: { line: { color: '#ff4444' } }\n    };\n\n    const trendTrace = {\n      x: dates,\n      y: trendLine,\n      type: 'scatter',\n      mode: 'lines',\n      name: 'Trend',\n      line: { color: '#ffa500', width: 2, dash: 'dash' }\n    };\n\n    const layout = {\n      title: 'Historical Price with Trend',\n      xaxis: { title: 'Date' },\n      yaxis: { title: 'Price ($)' },\n      paper_bgcolor: isDarkMode ? '#1a1a1a' : 'white',\n      plot_bgcolor: isDarkMode ? '#2d2d2d' : 'white',\n      font: { color: isDarkMode ? 'white' : 'black' }\n    };\n\n    window.Plotly.newPlot(chartRef.current, [candlestickTrace, trendTrace], layout);\n  }, [prices, trend, isDarkMode]);\n\n  return <div ref={chartRef} className=\"w-full h-96\" />;\n};\n\ninterface VolatilityChartProps {\n  prices: PricePoint[];\n  volatilities: number[];\n  regimes: number[];\n  isDarkMode: boolean;\n}\n\nexport const VolatilityChart: React.FC<VolatilityChartProps> = ({ \n  prices, volatilities, regimes, isDarkMode \n}) => {\n  const chartRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!chartRef.current || prices.length === 0 || !window.Plotly) return;\n\n    const dates = prices.map(p => p.date.toISOString().split('T')[0]);\n    const closes = prices.map(p => p.close);\n\n    // Create background shading for regimes\n    const shapes: any[] = [];\n    let currentRegime = regimes[0];\n    let shapeStart = 0;\n\n    for (let i = 1; i < regimes.length; i++) {\n      if (regimes[i] !== currentRegime) {\n        shapes.push({\n          type: 'rect',\n          xref: 'x',\n          yref: 'paper',\n          x0: dates[shapeStart],\n          x1: dates[i - 1],\n          y0: 0,\n          y1: 1,\n          fillcolor: currentRegime > 0 ? 'rgba(0, 255, 136, 0.1)' : 'rgba(255, 68, 68, 0.1)',\n          line: { width: 0 }\n        });\n        shapeStart = i;\n        currentRegime = regimes[i];\n      }\n    }\n\n    // Add final shape\n    shapes.push({\n      type: 'rect',\n      xref: 'x',\n      yref: 'paper',\n      x0: dates[shapeStart],\n      x1: dates[dates.length - 1],\n      y0: 0,\n      y1: 1,\n      fillcolor: currentRegime > 0 ? 'rgba(0, 255, 136, 0.1)' : 'rgba(255, 68, 68, 0.1)',\n      line: { width: 0 }\n    });\n\n    const priceTrace = {\n      x: dates,\n      y: closes,\n      type: 'scatter',\n      mode: 'lines',\n      name: 'Price',\n      line: { color: '#4a90e2' },\n      yaxis: 'y'\n    };\n\n    const volatilityTrace = {\n      x: dates.slice(1), // Volatility has one less point\n      y: volatilities.map(v => v * 100), // Convert to percentage\n      type: 'scatter',\n      mode: 'lines',\n      name: 'Volatility (%)',\n      line: { color: '#ff6b6b' },\n      yaxis: 'y2'\n    };\n\n    const layout = {\n      title: 'Price with Rolling Volatility and Regime Detection',\n      xaxis: { title: 'Date' },\n      yaxis: { title: 'Price ($)', side: 'left' },\n      yaxis2: {\n        title: 'Volatility (%)',\n        overlaying: 'y',\n        side: 'right'\n      },\n      shapes,\n      paper_bgcolor: isDarkMode ? '#1a1a1a' : 'white',\n      plot_bgcolor: isDarkMode ? '#2d2d2d' : 'white',\n      font: { color: isDarkMode ? 'white' : 'black' }\n    };\n\n    window.Plotly.newPlot(chartRef.current, [priceTrace, volatilityTrace], layout);\n  }, [prices, volatilities, regimes, isDarkMode]);\n\n  return <div ref={chartRef} className=\"w-full h-96\" />;\n};\n\ninterface MonteCarloPathsProps {\n  paths: number[][];\n  initialPrice: number;\n  isDarkMode: boolean;\n}\n\nexport const MonteCarloPathsChart: React.FC<MonteCarloPathsProps> = ({ \n  paths, initialPrice, isDarkMode \n}) => {\n  const chartRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!chartRef.current || paths.length === 0 || !window.Plotly) return;\n\n    const numSteps = paths[0].length;\n    const xValues = Array.from({ length: numSteps }, (_, i) => i);\n    \n    // Plot first 50 paths with transparency\n    const traces = paths.slice(0, 50).map((path, i) => ({\n      x: xValues,\n      y: path,\n      type: 'scatter',\n      mode: 'lines',\n      name: `Path ${i + 1}`,\n      line: { color: `rgba(74, 144, 226, 0.3)`, width: 1 },\n      showlegend: false\n    }));\n\n    // Add upside and downside reference lines\n    const upsideLine = {\n      x: [0, numSteps - 1],\n      y: [initialPrice * 1.2, initialPrice * 1.2],\n      type: 'scatter',\n      mode: 'lines',\n      name: '+20% Target',\n      line: { color: '#00ff88', width: 2, dash: 'dash' }\n    };\n\n    const downsideLine = {\n      x: [0, numSteps - 1],\n      y: [initialPrice * 0.9, initialPrice * 0.9],\n      type: 'scatter',\n      mode: 'lines',\n      name: '-10% Stop',\n      line: { color: '#ff4444', width: 2, dash: 'dash' }\n    };\n\n    const layout = {\n      title: 'Monte Carlo Price Paths (50 sample paths)',\n      xaxis: { title: 'Days' },\n      yaxis: { title: 'Price ($)' },\n      paper_bgcolor: isDarkMode ? '#1a1a1a' : 'white',\n      plot_bgcolor: isDarkMode ? '#2d2d2d' : 'white',\n      font: { color: isDarkMode ? 'white' : 'black' }\n    };\n\n    window.Plotly.newPlot(chartRef.current, [...traces, upsideLine, downsideLine], layout);\n  }, [paths, initialPrice, isDarkMode]);\n\n  return <div ref={chartRef} className=\"w-full h-96\" />;\n};\n\ninterface DistributionChartProps {\n  histogram: { bin: number; count: number; }[];\n  initialPrice: number;\n  isDarkMode: boolean;\n}\n\nexport const DistributionChart: React.FC<DistributionChartProps> = ({ \n  histogram, initialPrice, isDarkMode \n}) => {\n  const chartRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!chartRef.current || histogram.length === 0 || !window.Plotly) return;\n\n    const histogramTrace = {\n      x: histogram.map(h => h.bin),\n      y: histogram.map(h => h.count),\n      type: 'bar',\n      name: 'Distribution',\n      marker: { color: '#4a90e2', opacity: 0.7 }\n    };\n\n    const upsideLine = {\n      x: [initialPrice * 1.2, initialPrice * 1.2],\n      y: [0, Math.max(...histogram.map(h => h.count))],\n      type: 'scatter',\n      mode: 'lines',\n      name: '+20% Target',\n      line: { color: '#00ff88', width: 3 }\n    };\n\n    const downsideLine = {\n      x: [initialPrice * 0.9, initialPrice * 0.9],\n      y: [0, Math.max(...histogram.map(h => h.count))],\n      type: 'scatter',\n      mode: 'lines',\n      name: '-10% Stop',\n      line: { color: '#ff4444', width: 3 }\n    };\n\n    const layout = {\n      title: 'Distribution of Final Prices',\n      xaxis: { title: 'Price ($)' },\n      yaxis: { title: 'Frequency' },\n      paper_bgcolor: isDarkMode ? '#1a1a1a' : 'white',\n      plot_bgcolor: isDarkMode ? '#2d2d2d' : 'white',\n      font: { color: isDarkMode ? 'white' : 'black' }\n    };\n\n    window.Plotly.newPlot(chartRef.current, [histogramTrace, upsideLine, downsideLine], layout);\n  }, [histogram, initialPrice, isDarkMode]);\n\n  return <div ref={chartRef} className=\"w-full h-96\" />;\n};\n\n// New advanced chart components\n\ninterface PerformanceMetricsChartProps {\n  metrics: PerformanceMetrics;\n  isDarkMode: boolean;\n}\n\nexport const PerformanceMetricsChart: React.FC<PerformanceMetricsChartProps> = ({ \n  metrics, isDarkMode \n}) => {\n  const chartRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!chartRef.current || !window.Plotly) return;\n\n    const metricNames = ['Sharpe', 'Sortino', 'Calmar', 'Information', 'Treynor'];\n    const metricValues = [\n      metrics.sharpeRatio,\n      metrics.sortinoRatio,\n      metrics.calmarRatio,\n      metrics.informationRatio,\n      metrics.treynorRatio\n    ];\n\n    const trace = {\n      x: metricNames,\n      y: metricValues,\n      type: 'bar',\n      marker: {\n        color: metricValues.map(v => v > 0 ? '#00ff88' : '#ff4444'),\n        opacity: 0.8\n      },\n      name: 'Performance Ratios'\n    };\n\n    const layout = {\n      title: 'Performance Metrics',\n      xaxis: { title: 'Metric' },\n      yaxis: { title: 'Ratio Value' },\n      paper_bgcolor: isDarkMode ? '#1a1a1a' : 'white',\n      plot_bgcolor: isDarkMode ? '#2d2d2d' : 'white',\n      font: { color: isDarkMode ? 'white' : 'black' }\n    };\n\n    window.Plotly.newPlot(chartRef.current, [trace], layout);\n  }, [metrics, isDarkMode]);\n\n  return <div ref={chartRef} className=\"w-full h-96\" />;\n};\n\ninterface StressTestChartProps {\n  results: StressTestResult[];\n  isDarkMode: boolean;\n}\n\nexport const StressTestChart: React.FC<StressTestChartProps> = ({ \n  results, isDarkMode \n}) => {\n  const chartRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!chartRef.current || results.length === 0 || !window.Plotly) return;\n\n    const scenarioNames = results.map(r => r.scenario.name);\n    const var95Values = results.map(r => r.var95);\n    const var99Values = results.map(r => r.var99);\n\n    const var95Trace = {\n      x: scenarioNames,\n      y: var95Values,\n      type: 'bar',\n      name: 'VaR (95%)',\n      marker: { color: '#ff6b6b', opacity: 0.8 }\n    };\n\n    const var99Trace = {\n      x: scenarioNames,\n      y: var99Values,\n      type: 'bar',\n      name: 'VaR (99%)',\n      marker: { color: '#ff4444', opacity: 0.8 }\n    };\n\n    const layout = {\n      title: 'Stress Test Results',\n      xaxis: { title: 'Scenario' },\n      yaxis: { title: 'Value at Risk ($)' },\n      barmode: 'group',\n      paper_bgcolor: isDarkMode ? '#1a1a1a' : 'white',\n      plot_bgcolor: isDarkMode ? '#2d2d2d' : 'white',\n      font: { color: isDarkMode ? 'white' : 'black' }\n    };\n\n    window.Plotly.newPlot(chartRef.current, [var95Trace, var99Trace], layout);\n  }, [results, isDarkMode]);\n\n  return <div ref={chartRef} className=\"w-full h-96\" />;\n};\n\ninterface RegimeAnalysisChartProps {\n  analysis: RegimeAnalysis;\n  isDarkMode: boolean;\n}\n\nexport const RegimeAnalysisChart: React.FC<RegimeAnalysisChartProps> = ({ \n  analysis, isDarkMode \n}) => {\n  const chartRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!chartRef.current || !window.Plotly) return;\n\n    // Create multiple subplots\n    const fig = {\n      data: [\n        // Regime probabilities pie chart\n        {\n          values: [analysis.bullMarketProbability, analysis.bearMarketProbability],\n          labels: ['Bull Market', 'Bear Market'],\n          type: 'pie',\n          name: 'Regime Probabilities',\n          domain: { row: 0, column: 0 },\n          marker: { colors: ['#00ff88', '#ff4444'] }\n        },\n        // Regime durations bar chart\n        {\n          x: ['Bull', 'Bear'],\n          y: [analysis.regimeDuration.bull, analysis.regimeDuration.bear],\n          type: 'bar',\n          name: 'Avg Duration (days)',\n          domain: { row: 0, column: 1 },\n          marker: { color: ['#00ff88', '#ff4444'] }\n        },\n        // Regime volatility\n        {\n          x: ['Bull', 'Bear'],\n          y: [analysis.regimeVolatility.bull * 100, analysis.regimeVolatility.bear * 100],\n          type: 'bar',\n          name: 'Volatility (%)',\n          domain: { row: 1, column: 0 },\n          marker: { color: ['#4a90e2', '#ff6b6b'] }\n        },\n        // Regime returns\n        {\n          x: ['Bull', 'Bear'],\n          y: [analysis.regimeReturns.bull * 100, analysis.regimeReturns.bear * 100],\n          type: 'bar',\n          name: 'Returns (%)',\n          domain: { row: 1, column: 1 },\n          marker: { color: ['#00ff88', '#ff4444'] }\n        }\n      ],\n      layout: {\n        title: 'Regime Analysis',\n        grid: { rows: 2, columns: 2, pattern: 'independent' },\n        paper_bgcolor: isDarkMode ? '#1a1a1a' : 'white',\n        plot_bgcolor: isDarkMode ? '#2d2d2d' : 'white',\n        font: { color: isDarkMode ? 'white' : 'black' }\n      }\n    };\n\n    window.Plotly.newPlot(chartRef.current, fig.data, fig.layout);\n  }, [analysis, isDarkMode]);\n\n  return <div ref={chartRef} className=\"w-full h-96\" />;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}