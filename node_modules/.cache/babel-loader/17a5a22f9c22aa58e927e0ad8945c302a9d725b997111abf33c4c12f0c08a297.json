{"ast":null,"code":"// src/DataFetch.ts\nexport class DataFetcher{constructor(){this.apiKey=null;this.provider='alphavantage';this.apiKey=sessionStorage.getItem('finance-api-key');}setApiKey(key,provider){this.apiKey=key;this.provider=provider;sessionStorage.setItem('finance-api-key',key);sessionStorage.setItem('finance-api-provider',provider);}clearApiKey(){this.apiKey=null;sessionStorage.removeItem('finance-api-key');sessionStorage.removeItem('finance-api-provider');}hasApiKey(){return!!this.apiKey;}async fetchStockData(ticker){if(!this.apiKey){throw new Error('API key not set');}const provider=sessionStorage.getItem('finance-api-provider')||'alphavantage';if(provider==='alphavantage'){return this.fetchFromAlphaVantage(ticker);}else{return this.fetchFromPolygon(ticker);}}async fetchFromAlphaVantage(ticker){const timeSeriesUrl=`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${ticker}&apikey=${this.apiKey}&outputsize=full`;const overviewUrl=`https://www.alphavantage.co/query?function=OVERVIEW&symbol=${ticker}&apikey=${this.apiKey}`;try{var _prices;const[timeSeriesResponse,overviewResponse]=await Promise.all([fetch(timeSeriesUrl),fetch(overviewUrl)]);const timeSeriesData=await timeSeriesResponse.json();const overviewData=await overviewResponse.json();if(timeSeriesData.Note){throw new Error('Rate limit exceeded. Please wait and try again.');}if(timeSeriesData.Error){throw new Error(timeSeriesData.Error);}const timeSeries=timeSeriesData['Time Series (Daily)'];if(!timeSeries){throw new Error('Invalid ticker symbol or no data available');}const dates=Object.keys(timeSeries).sort();const prices=dates.map(date=>({date:new Date(date),open:parseFloat(timeSeries[date]['1. open']),high:parseFloat(timeSeries[date]['2. high']),low:parseFloat(timeSeries[date]['3. low']),close:parseFloat(timeSeries[date]['4. close']),volume:parseInt(timeSeries[date]['5. volume'])}));const latestPrice=((_prices=prices[prices.length-1])===null||_prices===void 0?void 0:_prices.close)||0;return{ticker,currentPrice:latestPrice,prices,fundamentals:{pe:parseFloat(overviewData.PERatio)||null,pb:parseFloat(overviewData.PriceToBookRatio)||null,peg:parseFloat(overviewData.PEGRatio)||null,dividendYield:parseFloat(overviewData.DividendYield)||null,marketCap:parseFloat(overviewData.MarketCapitalization)||null,eps:parseFloat(overviewData.EPS)||null}};}catch(error){if(error instanceof Error){throw error;}throw new Error('Failed to fetch stock data');}}async fetchFromPolygon(ticker){const endDate=new Date().toISOString().split('T')[0];const startDate=new Date(Date.now()-365*24*60*60*1000).toISOString().split('T')[0];const aggregatesUrl=`https://api.polygon.io/v2/aggs/ticker/${ticker}/range/1/day/${startDate}/${endDate}?adjusted=true&sort=asc&limit=50000&apikey=${this.apiKey}`;try{var _prices2;const response=await fetch(aggregatesUrl);const data=await response.json();if(data.status==='ERROR'){throw new Error(data.error||'API error');}if(!data.results||data.results.length===0){throw new Error('No data available for this ticker');}const prices=data.results.map(result=>({date:new Date(result.t),open:result.o,high:result.h,low:result.l,close:result.c,volume:result.v}));const latestPrice=((_prices2=prices[prices.length-1])===null||_prices2===void 0?void 0:_prices2.close)||0;return{ticker,currentPrice:latestPrice,prices,fundamentals:{pe:null,pb:null,peg:null,dividendYield:null,marketCap:null,eps:null}};}catch(error){if(error instanceof Error){throw error;}throw new Error('Failed to fetch stock data from Polygon');}}}","map":{"version":3,"names":["DataFetcher","constructor","apiKey","provider","sessionStorage","getItem","setApiKey","key","setItem","clearApiKey","removeItem","hasApiKey","fetchStockData","ticker","Error","fetchFromAlphaVantage","fetchFromPolygon","timeSeriesUrl","overviewUrl","_prices","timeSeriesResponse","overviewResponse","Promise","all","fetch","timeSeriesData","json","overviewData","Note","timeSeries","dates","Object","keys","sort","prices","map","date","Date","open","parseFloat","high","low","close","volume","parseInt","latestPrice","length","currentPrice","fundamentals","pe","PERatio","pb","PriceToBookRatio","peg","PEGRatio","dividendYield","DividendYield","marketCap","MarketCapitalization","eps","EPS","error","endDate","toISOString","split","startDate","now","aggregatesUrl","_prices2","response","data","status","results","result","t","o","h","l","c","v"],"sources":["/Users/slongo/Documents/simone_misc/stock_widget/src/DataFetch.ts"],"sourcesContent":["// src/DataFetch.ts\nexport type ApiProvider = 'alphavantage' | 'polygon';\n\nexport interface PricePoint {\n  date: Date;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n}\n\nexport interface Fundamentals {\n  pe: number | null;\n  pb: number | null;\n  peg: number | null;\n  dividendYield: number | null;\n  marketCap: number | null;\n  eps: number | null;\n}\n\nexport interface StockData {\n  ticker: string;\n  currentPrice: number;\n  prices: PricePoint[];\n  fundamentals: Fundamentals;\n}\n\nexport class DataFetcher {\n  private apiKey: string | null = null;\n  private provider: ApiProvider = 'alphavantage';\n\n  constructor() {\n    this.apiKey = sessionStorage.getItem('finance-api-key');\n  }\n\n  setApiKey(key: string, provider: ApiProvider) {\n    this.apiKey = key;\n    this.provider = provider;\n    sessionStorage.setItem('finance-api-key', key);\n    sessionStorage.setItem('finance-api-provider', provider);\n  }\n\n  clearApiKey() {\n    this.apiKey = null;\n    sessionStorage.removeItem('finance-api-key');\n    sessionStorage.removeItem('finance-api-provider');\n  }\n\n  hasApiKey(): boolean {\n    return !!this.apiKey;\n  }\n\n  async fetchStockData(ticker: string): Promise<StockData> {\n    if (!this.apiKey) {\n      throw new Error('API key not set');\n    }\n\n    const provider = sessionStorage.getItem('finance-api-provider') as ApiProvider || 'alphavantage';\n    \n    if (provider === 'alphavantage') {\n      return this.fetchFromAlphaVantage(ticker);\n    } else {\n      return this.fetchFromPolygon(ticker);\n    }\n  }\n\n  private async fetchFromAlphaVantage(ticker: string): Promise<StockData> {\n    const timeSeriesUrl = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${ticker}&apikey=${this.apiKey}&outputsize=full`;\n    const overviewUrl = `https://www.alphavantage.co/query?function=OVERVIEW&symbol=${ticker}&apikey=${this.apiKey}`;\n\n    try {\n      const [timeSeriesResponse, overviewResponse] = await Promise.all([\n        fetch(timeSeriesUrl),\n        fetch(overviewUrl)\n      ]);\n\n      const timeSeriesData = await timeSeriesResponse.json();\n      const overviewData = await overviewResponse.json();\n\n      if (timeSeriesData.Note) {\n        throw new Error('Rate limit exceeded. Please wait and try again.');\n      }\n\n      if (timeSeriesData.Error) {\n        throw new Error(timeSeriesData.Error);\n      }\n\n      const timeSeries = timeSeriesData['Time Series (Daily)'];\n      if (!timeSeries) {\n        throw new Error('Invalid ticker symbol or no data available');\n      }\n\n      const dates = Object.keys(timeSeries).sort();\n      const prices = dates.map(date => ({\n        date: new Date(date),\n        open: parseFloat(timeSeries[date]['1. open']),\n        high: parseFloat(timeSeries[date]['2. high']),\n        low: parseFloat(timeSeries[date]['3. low']),\n        close: parseFloat(timeSeries[date]['4. close']),\n        volume: parseInt(timeSeries[date]['5. volume'])\n      }));\n\n      const latestPrice = prices[prices.length - 1]?.close || 0;\n\n      return {\n        ticker,\n        currentPrice: latestPrice,\n        prices,\n        fundamentals: {\n          pe: parseFloat(overviewData.PERatio) || null,\n          pb: parseFloat(overviewData.PriceToBookRatio) || null,\n          peg: parseFloat(overviewData.PEGRatio) || null,\n          dividendYield: parseFloat(overviewData.DividendYield) || null,\n          marketCap: parseFloat(overviewData.MarketCapitalization) || null,\n          eps: parseFloat(overviewData.EPS) || null\n        }\n      };\n    } catch (error) {\n      if (error instanceof Error) {\n        throw error;\n      }\n      throw new Error('Failed to fetch stock data');\n    }\n  }\n\n  private async fetchFromPolygon(ticker: string): Promise<StockData> {\n    const endDate = new Date().toISOString().split('T')[0];\n    const startDate = new Date(Date.now() - 365 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n    \n    const aggregatesUrl = `https://api.polygon.io/v2/aggs/ticker/${ticker}/range/1/day/${startDate}/${endDate}?adjusted=true&sort=asc&limit=50000&apikey=${this.apiKey}`;\n\n    try {\n      const response = await fetch(aggregatesUrl);\n      const data = await response.json();\n\n      if (data.status === 'ERROR') {\n        throw new Error(data.error || 'API error');\n      }\n\n      if (!data.results || data.results.length === 0) {\n        throw new Error('No data available for this ticker');\n      }\n\n      const prices = data.results.map((result: any) => ({\n        date: new Date(result.t),\n        open: result.o,\n        high: result.h,\n        low: result.l,\n        close: result.c,\n        volume: result.v\n      }));\n\n      const latestPrice = prices[prices.length - 1]?.close || 0;\n\n      return {\n        ticker,\n        currentPrice: latestPrice,\n        prices,\n        fundamentals: {\n          pe: null,\n          pb: null,\n          peg: null,\n          dividendYield: null,\n          marketCap: null,\n          eps: null\n        }\n      };\n    } catch (error) {\n      if (error instanceof Error) {\n        throw error;\n      }\n      throw new Error('Failed to fetch stock data from Polygon');\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}