{"ast":null,"code":"var _jsxFileName = \"/Users/slongo/Documents/simone_misc/stock_widget/src/EnhancedCharts.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\n// src/EnhancedCharts.tsx\nimport React, { useEffect, useRef, useState } from 'react';\n\n// Declare Plotly as global\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EnhancedHistoricalChart = ({\n  prices,\n  indicators,\n  trend,\n  isDarkMode,\n  showIndicators\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (!chartRef.current || prices.length === 0 || !window.Plotly) return;\n    const dates = prices.map(p => p.date.toISOString().split('T')[0]);\n    const closes = prices.map(p => p.close);\n    const opens = prices.map(p => p.open);\n    const highs = prices.map(p => p.high);\n    const lows = prices.map(p => p.low);\n    const traces = [];\n\n    // Main candlestick chart\n    traces.push({\n      x: dates,\n      open: opens,\n      high: highs,\n      low: lows,\n      close: closes,\n      type: 'candlestick',\n      name: 'Price',\n      increasing: {\n        line: {\n          color: '#00ff88'\n        }\n      },\n      decreasing: {\n        line: {\n          color: '#ff4444'\n        }\n      }\n    });\n\n    // Trend line\n    const trendLine = Array.from({\n      length: prices.length\n    }, (_, i) => {\n      const progress = i / (prices.length - 1);\n      return closes[0] + (trend - closes[0]) * progress;\n    });\n    traces.push({\n      x: dates,\n      y: trendLine,\n      type: 'scatter',\n      mode: 'lines',\n      name: 'Trend',\n      line: {\n        color: '#ffa500',\n        width: 2,\n        dash: 'dash'\n      }\n    });\n\n    // Bollinger Bands\n    if (showIndicators.bollingerBands) {\n      traces.push({\n        x: dates,\n        y: indicators.bollingerBands.upper,\n        type: 'scatter',\n        mode: 'lines',\n        name: 'Upper BB',\n        line: {\n          color: 'rgba(255, 193, 7, 0.6)',\n          width: 1\n        },\n        showlegend: true\n      });\n      traces.push({\n        x: dates,\n        y: indicators.bollingerBands.middle,\n        type: 'scatter',\n        mode: 'lines',\n        name: 'Middle BB',\n        line: {\n          color: 'rgba(255, 193, 7, 0.8)',\n          width: 1\n        },\n        showlegend: true\n      });\n      traces.push({\n        x: dates,\n        y: indicators.bollingerBands.lower,\n        type: 'scatter',\n        mode: 'lines',\n        name: 'Lower BB',\n        line: {\n          color: 'rgba(255, 193, 7, 0.6)',\n          width: 1\n        },\n        showlegend: true\n      });\n    }\n\n    // Moving Averages\n    if (showIndicators.movingAverages) {\n      traces.push({\n        x: dates,\n        y: indicators.movingAverages.sma20,\n        type: 'scatter',\n        mode: 'lines',\n        name: '20-day SMA',\n        line: {\n          color: '#2196F3',\n          width: 2\n        },\n        showlegend: true\n      });\n      traces.push({\n        x: dates,\n        y: indicators.movingAverages.sma50,\n        type: 'scatter',\n        mode: 'lines',\n        name: '50-day SMA',\n        line: {\n          color: '#9C27B0',\n          width: 2\n        },\n        showlegend: true\n      });\n    }\n    const layout = {\n      title: {\n        text: 'Historical Price with Technical Indicators',\n        font: {\n          size: 18,\n          color: isDarkMode ? 'white' : 'black'\n        }\n      },\n      xaxis: {\n        title: 'Date',\n        gridcolor: isDarkMode ? '#444' : '#ddd'\n      },\n      yaxis: {\n        title: 'Price ($)',\n        gridcolor: isDarkMode ? '#444' : '#ddd'\n      },\n      paper_bgcolor: isDarkMode ? '#1a1a1a' : 'white',\n      plot_bgcolor: isDarkMode ? '#2d2d2d' : 'white',\n      font: {\n        color: isDarkMode ? 'white' : 'black'\n      },\n      legend: {\n        x: 0.02,\n        y: 0.98,\n        bgcolor: isDarkMode ? 'rgba(45, 45, 45, 0.8)' : 'rgba(255, 255, 255, 0.8)',\n        bordercolor: isDarkMode ? '#666' : '#ccc'\n      },\n      hovermode: 'x unified'\n    };\n    window.Plotly.newPlot(chartRef.current, traces, layout);\n  }, [prices, indicators, trend, isDarkMode, showIndicators]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chartRef,\n    className: \"w-full h-96\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 10\n  }, this);\n};\n_s(EnhancedHistoricalChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = EnhancedHistoricalChart;\nexport const TechnicalIndicatorsChart = ({\n  prices,\n  indicators,\n  isDarkMode\n}) => {\n  _s2();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (!chartRef.current || prices.length === 0 || !window.Plotly) return;\n    const dates = prices.map(p => p.date.toISOString().split('T')[0]);\n\n    // Create subplots for different indicators\n    const traces = [];\n\n    // RSI\n    traces.push({\n      x: dates,\n      y: indicators.rsi,\n      type: 'scatter',\n      mode: 'lines',\n      name: 'RSI',\n      line: {\n        color: '#FF6B6B',\n        width: 2\n      },\n      yaxis: 'y'\n    });\n\n    // RSI overbought/oversold lines\n    traces.push({\n      x: [dates[0], dates[dates.length - 1]],\n      y: [70, 70],\n      type: 'scatter',\n      mode: 'lines',\n      name: 'Overbought (70)',\n      line: {\n        color: '#FF6B6B',\n        width: 1,\n        dash: 'dash'\n      },\n      yaxis: 'y',\n      showlegend: false\n    });\n    traces.push({\n      x: [dates[0], dates[dates.length - 1]],\n      y: [30, 30],\n      type: 'scatter',\n      mode: 'lines',\n      name: 'Oversold (30)',\n      line: {\n        color: '#FF6B6B',\n        width: 1,\n        dash: 'dash'\n      },\n      yaxis: 'y',\n      showlegend: false\n    });\n\n    // MACD\n    traces.push({\n      x: dates,\n      y: indicators.macd.macd,\n      type: 'scatter',\n      mode: 'lines',\n      name: 'MACD',\n      line: {\n        color: '#4ECDC4',\n        width: 2\n      },\n      yaxis: 'y2'\n    });\n    traces.push({\n      x: dates,\n      y: indicators.macd.signal,\n      type: 'scatter',\n      mode: 'lines',\n      name: 'Signal',\n      line: {\n        color: '#FFE66D',\n        width: 2\n      },\n      yaxis: 'y2'\n    });\n\n    // MACD Histogram\n    traces.push({\n      x: dates,\n      y: indicators.macd.histogram,\n      type: 'bar',\n      name: 'MACD Histogram',\n      marker: {\n        color: indicators.macd.histogram.map(h => h >= 0 ? 'rgba(78, 205, 196, 0.6)' : 'rgba(255, 230, 109, 0.6)')\n      },\n      yaxis: 'y3'\n    });\n    const layout = {\n      title: {\n        text: 'Technical Indicators',\n        font: {\n          size: 18,\n          color: isDarkMode ? 'white' : 'black'\n        }\n      },\n      grid: {\n        rows: 3,\n        columns: 1,\n        subplots: [['xy'], ['xy2'], ['xy3']],\n        rowheight: [0.4, 0.3, 0.3]\n      },\n      xaxis: {\n        title: 'Date',\n        gridcolor: isDarkMode ? '#444' : '#ddd'\n      },\n      yaxis: {\n        title: 'RSI',\n        domain: [0.7, 1],\n        range: [0, 100],\n        gridcolor: isDarkMode ? '#444' : '#ddd'\n      },\n      yaxis2: {\n        title: 'MACD',\n        domain: [0.4, 0.7],\n        gridcolor: isDarkMode ? '#444' : '#ddd'\n      },\n      yaxis3: {\n        title: 'MACD Histogram',\n        domain: [0, 0.4],\n        gridcolor: isDarkMode ? '#444' : '#ddd'\n      },\n      paper_bgcolor: isDarkMode ? '#1a1a1a' : 'white',\n      plot_bgcolor: isDarkMode ? '#2d2d2d' : 'white',\n      font: {\n        color: isDarkMode ? 'white' : 'black'\n      },\n      showlegend: true,\n      legend: {\n        x: 0.02,\n        y: 0.98,\n        bgcolor: isDarkMode ? 'rgba(45, 45, 45, 0.8)' : 'rgba(255, 255, 255, 0.8)',\n        bordercolor: isDarkMode ? '#666' : '#ccc'\n      }\n    };\n    window.Plotly.newPlot(chartRef.current, traces, layout);\n  }, [prices, indicators, isDarkMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chartRef,\n    className: \"w-full h-96\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 10\n  }, this);\n};\n_s2(TechnicalIndicatorsChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c2 = TechnicalIndicatorsChart;\nexport const RecommendationsChart = ({\n  recommendations,\n  currentPrice,\n  isDarkMode\n}) => {\n  _s3();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (!chartRef.current || !window.Plotly) return;\n    const categories = ['Technical', 'Fundamental', 'Risk', 'Overall'];\n    const confidences = [recommendations.technical.confidence, recommendations.fundamental.confidence, recommendations.risk.confidence, recommendations.overall.confidence];\n    const colors = confidences.map(conf => {\n      const rec = confidences.indexOf(conf) === 3 ? recommendations.overall : confidences.indexOf(conf) === 0 ? recommendations.technical : confidences.indexOf(conf) === 1 ? recommendations.fundamental : recommendations.risk;\n      if (rec.action === 'BUY') return '#00ff88';\n      if (rec.action === 'SELL') return '#ff4444';\n      return '#ffa500';\n    });\n    const traces = [{\n      x: categories,\n      y: confidences,\n      type: 'bar',\n      marker: {\n        color: colors,\n        line: {\n          color: isDarkMode ? '#666' : '#ccc',\n          width: 1\n        }\n      },\n      text: confidences.map(c => c + '%'),\n      textposition: 'auto',\n      textfont: {\n        color: isDarkMode ? 'white' : 'black'\n      }\n    }];\n    const layout = {\n      title: {\n        text: 'Recommendation Confidence by Category',\n        font: {\n          size: 18,\n          color: isDarkMode ? 'white' : 'black'\n        }\n      },\n      xaxis: {\n        title: 'Analysis Category',\n        gridcolor: isDarkMode ? '#444' : '#ddd'\n      },\n      yaxis: {\n        title: 'Confidence (%)',\n        range: [0, 100],\n        gridcolor: isDarkMode ? '#444' : '#ddd'\n      },\n      paper_bgcolor: isDarkMode ? '#1a1a1a' : 'white',\n      plot_bgcolor: isDarkMode ? '#2d2d2d' : 'white',\n      font: {\n        color: isDarkMode ? 'white' : 'black'\n      }\n    };\n    window.Plotly.newPlot(chartRef.current, traces, layout);\n  }, [recommendations, currentPrice, isDarkMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chartRef,\n    className: \"w-full h-96\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 10\n  }, this);\n};\n_s3(RecommendationsChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c3 = RecommendationsChart;\nexport const EducationalMetrics = ({\n  prices,\n  indicators,\n  fundamentals,\n  recommendations,\n  currentPrice\n}) => {\n  _s4();\n  var _fundamentals$pe;\n  const [selectedMetric, setSelectedMetric] = useState(null);\n  const metrics = [{\n    name: 'RSI (Relative Strength Index)',\n    value: indicators.rsi[indicators.rsi.length - 1].toFixed(1),\n    description: 'Measures the speed and magnitude of price changes to identify overbought or oversold conditions.',\n    interpretation: indicators.rsi[indicators.rsi.length - 1] < 30 ? 'Oversold - potential buying opportunity' : indicators.rsi[indicators.rsi.length - 1] > 70 ? 'Overbought - potential selling opportunity' : 'Neutral - no clear signal',\n    threshold: {\n      low: 30,\n      high: 70,\n      optimal: 50\n    },\n    isGood: indicators.rsi[indicators.rsi.length - 1] < 30 ? true : indicators.rsi[indicators.rsi.length - 1] > 70 ? false : null,\n    category: 'TECHNICAL'\n  }, {\n    name: 'P/E Ratio',\n    value: ((_fundamentals$pe = fundamentals.pe) === null || _fundamentals$pe === void 0 ? void 0 : _fundamentals$pe.toFixed(1)) || 'N/A',\n    description: 'Price-to-Earnings ratio compares a company\\'s stock price to its earnings per share.',\n    interpretation: fundamentals.pe ? fundamentals.pe < 15 ? 'Undervalued - potentially good buying opportunity' : fundamentals.pe > 25 ? 'Overvalued - consider selling or waiting' : 'Fairly valued - neutral' : 'No data available',\n    threshold: {\n      low: 15,\n      high: 25,\n      optimal: 20\n    },\n    isGood: fundamentals.pe ? fundamentals.pe < 15 ? true : fundamentals.pe > 25 ? false : null : null,\n    category: 'FUNDAMENTAL'\n  }, {\n    name: 'Volatility',\n    value: (() => {\n      const returns = [];\n      for (let i = 1; i < Math.min(20, prices.length); i++) {\n        returns.push(Math.log(prices[prices.length - i].close / prices[prices.length - i - 1].close));\n      }\n      const mean = returns.reduce((sum, ret) => sum + ret, 0) / returns.length;\n      const variance = returns.reduce((sum, ret) => sum + Math.pow(ret - mean, 2), 0) / returns.length;\n      return (Math.sqrt(variance * 252) * 100).toFixed(1) + '%';\n    })(),\n    description: 'Annualized volatility measures the degree of price variation over time.',\n    interpretation: 'Lower volatility indicates more stable price movement, while higher volatility suggests greater risk and potential reward.',\n    threshold: {\n      low: 15,\n      high: 30,\n      optimal: 20\n    },\n    isGood: null,\n    category: 'RISK'\n  }, {\n    name: 'MACD Signal',\n    value: indicators.macd.macd[indicators.macd.macd.length - 1] > indicators.macd.signal[indicators.macd.signal.length - 1] ? 'Bullish' : 'Bearish',\n    description: 'Moving Average Convergence Divergence compares two moving averages to identify momentum changes.',\n    interpretation: indicators.macd.macd[indicators.macd.macd.length - 1] > indicators.macd.signal[indicators.macd.signal.length - 1] ? 'MACD above signal line indicates upward momentum' : 'MACD below signal line indicates downward momentum',\n    threshold: {\n      low: 0,\n      high: 0,\n      optimal: 0\n    },\n    isGood: indicators.macd.macd[indicators.macd.macd.length - 1] > indicators.macd.signal[indicators.macd.signal.length - 1],\n    category: 'TECHNICAL'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-2xl font-bold text-slate-900\",\n      children: \"Key Metrics Explained\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n      children: metrics.map(metric => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-6 rounded-2xl border-2 transition-all duration-200 cursor-pointer ${selectedMetric === metric.name ? 'border-blue-500 bg-blue-50' : metric.isGood === true ? 'border-green-200 bg-green-50' : metric.isGood === false ? 'border-red-200 bg-red-50' : 'border-slate-200 bg-white'}`,\n        onClick: () => setSelectedMetric(selectedMetric === metric.name ? null : metric.name),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-start mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-semibold text-slate-900\",\n            children: metric.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `px-3 py-1 rounded-full text-sm font-medium ${metric.isGood === true ? 'bg-green-100 text-green-800' : metric.isGood === false ? 'bg-red-100 text-red-800' : 'bg-slate-100 text-slate-800'}`,\n            children: metric.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-slate-600 mb-3\",\n          children: metric.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), selectedMetric === metric.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-4 bg-slate-50 rounded-xl\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm font-medium text-slate-700 mb-2\",\n            children: \"Interpretation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-slate-600\",\n            children: metric.interpretation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 17\n          }, this), metric.threshold.optimal > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-slate-500 mb-1\",\n              children: \"Thresholds:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-4 text-xs\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-green-600\",\n                children: [\"Low: \", metric.threshold.low]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-blue-600\",\n                children: [\"Optimal: \", metric.threshold.optimal]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-red-600\",\n                children: [\"High: \", metric.threshold.high]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 15\n        }, this)]\n      }, metric.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 p-6 bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl border border-blue-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-lg font-semibold text-slate-900 mb-3\",\n        children: \"Overall Recommendation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `px-4 py-2 rounded-full text-white font-semibold ${recommendations.overall.action === 'BUY' ? 'bg-green-500' : recommendations.overall.action === 'SELL' ? 'bg-red-500' : 'bg-yellow-500'}`,\n          children: recommendations.overall.action\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-slate-900\",\n          children: [recommendations.overall.confidence, \"% Confidence\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-slate-700\",\n        children: recommendations.summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 437,\n    columnNumber: 5\n  }, this);\n};\n_s4(EducationalMetrics, \"pSFrKeD1mXvsDdruBrLjMpe8890=\");\n_c4 = EducationalMetrics;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"EnhancedHistoricalChart\");\n$RefreshReg$(_c2, \"TechnicalIndicatorsChart\");\n$RefreshReg$(_c3, \"RecommendationsChart\");\n$RefreshReg$(_c4, \"EducationalMetrics\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","EnhancedHistoricalChart","prices","indicators","trend","isDarkMode","showIndicators","_s","chartRef","current","length","window","Plotly","dates","map","p","date","toISOString","split","closes","close","opens","open","highs","high","lows","low","traces","push","x","type","name","increasing","line","color","decreasing","trendLine","Array","from","_","i","progress","y","mode","width","dash","bollingerBands","upper","showlegend","middle","lower","movingAverages","sma20","sma50","layout","title","text","font","size","xaxis","gridcolor","yaxis","paper_bgcolor","plot_bgcolor","legend","bgcolor","bordercolor","hovermode","newPlot","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","TechnicalIndicatorsChart","_s2","rsi","macd","signal","histogram","marker","h","grid","rows","columns","subplots","rowheight","domain","range","yaxis2","yaxis3","_c2","RecommendationsChart","recommendations","currentPrice","_s3","categories","confidences","technical","confidence","fundamental","risk","overall","colors","conf","rec","indexOf","action","c","textposition","textfont","_c3","EducationalMetrics","fundamentals","_s4","_fundamentals$pe","selectedMetric","setSelectedMetric","metrics","value","toFixed","description","interpretation","threshold","optimal","isGood","category","pe","returns","Math","min","log","mean","reduce","sum","ret","variance","pow","sqrt","children","metric","onClick","summary","_c4","$RefreshReg$"],"sources":["/Users/slongo/Documents/simone_misc/stock_widget/src/EnhancedCharts.tsx"],"sourcesContent":["// src/EnhancedCharts.tsx\nimport React, { useEffect, useRef, useState } from 'react';\nimport { PricePoint, TechnicalIndicators, RecommendationAnalysis } from './types';\n\n// Declare Plotly as global\ndeclare global {\n  interface Window {\n    Plotly: any;\n  }\n}\n\ninterface EnhancedHistoricalChartProps {\n  prices: PricePoint[];\n  indicators: TechnicalIndicators;\n  trend: number;\n  isDarkMode: boolean;\n  showIndicators: {\n    rsi: boolean;\n    macd: boolean;\n    bollingerBands: boolean;\n    movingAverages: boolean;\n    volume: boolean;\n  };\n}\n\nexport const EnhancedHistoricalChart: React.FC<EnhancedHistoricalChartProps> = ({ \n  prices, indicators, trend, isDarkMode, showIndicators \n}) => {\n  const chartRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!chartRef.current || prices.length === 0 || !window.Plotly) return;\n\n    const dates = prices.map(p => p.date.toISOString().split('T')[0]);\n    const closes = prices.map(p => p.close);\n    const opens = prices.map(p => p.open);\n    const highs = prices.map(p => p.high);\n    const lows = prices.map(p => p.low);\n\n    const traces: any[] = [];\n\n    // Main candlestick chart\n    traces.push({\n      x: dates,\n      open: opens,\n      high: highs,\n      low: lows,\n      close: closes,\n      type: 'candlestick',\n      name: 'Price',\n      increasing: { line: { color: '#00ff88' } },\n      decreasing: { line: { color: '#ff4444' } }\n    });\n\n    // Trend line\n    const trendLine = Array.from({ length: prices.length }, (_, i) => {\n      const progress = i / (prices.length - 1);\n      return closes[0] + (trend - closes[0]) * progress;\n    });\n\n    traces.push({\n      x: dates,\n      y: trendLine,\n      type: 'scatter',\n      mode: 'lines',\n      name: 'Trend',\n      line: { color: '#ffa500', width: 2, dash: 'dash' }\n    });\n\n    // Bollinger Bands\n    if (showIndicators.bollingerBands) {\n      traces.push({\n        x: dates,\n        y: indicators.bollingerBands.upper,\n        type: 'scatter',\n        mode: 'lines',\n        name: 'Upper BB',\n        line: { color: 'rgba(255, 193, 7, 0.6)', width: 1 },\n        showlegend: true\n      });\n\n      traces.push({\n        x: dates,\n        y: indicators.bollingerBands.middle,\n        type: 'scatter',\n        mode: 'lines',\n        name: 'Middle BB',\n        line: { color: 'rgba(255, 193, 7, 0.8)', width: 1 },\n        showlegend: true\n      });\n\n      traces.push({\n        x: dates,\n        y: indicators.bollingerBands.lower,\n        type: 'scatter',\n        mode: 'lines',\n        name: 'Lower BB',\n        line: { color: 'rgba(255, 193, 7, 0.6)', width: 1 },\n        showlegend: true\n      });\n    }\n\n    // Moving Averages\n    if (showIndicators.movingAverages) {\n      traces.push({\n        x: dates,\n        y: indicators.movingAverages.sma20,\n        type: 'scatter',\n        mode: 'lines',\n        name: '20-day SMA',\n        line: { color: '#2196F3', width: 2 },\n        showlegend: true\n      });\n\n      traces.push({\n        x: dates,\n        y: indicators.movingAverages.sma50,\n        type: 'scatter',\n        mode: 'lines',\n        name: '50-day SMA',\n        line: { color: '#9C27B0', width: 2 },\n        showlegend: true\n      });\n    }\n\n    const layout = {\n      title: {\n        text: 'Historical Price with Technical Indicators',\n        font: { size: 18, color: isDarkMode ? 'white' : 'black' }\n      },\n      xaxis: { \n        title: 'Date',\n        gridcolor: isDarkMode ? '#444' : '#ddd'\n      },\n      yaxis: { \n        title: 'Price ($)',\n        gridcolor: isDarkMode ? '#444' : '#ddd'\n      },\n      paper_bgcolor: isDarkMode ? '#1a1a1a' : 'white',\n      plot_bgcolor: isDarkMode ? '#2d2d2d' : 'white',\n      font: { color: isDarkMode ? 'white' : 'black' },\n      legend: {\n        x: 0.02,\n        y: 0.98,\n        bgcolor: isDarkMode ? 'rgba(45, 45, 45, 0.8)' : 'rgba(255, 255, 255, 0.8)',\n        bordercolor: isDarkMode ? '#666' : '#ccc'\n      },\n      hovermode: 'x unified'\n    };\n\n    window.Plotly.newPlot(chartRef.current, traces, layout);\n  }, [prices, indicators, trend, isDarkMode, showIndicators]);\n\n  return <div ref={chartRef} className=\"w-full h-96\" />;\n};\n\ninterface TechnicalIndicatorsChartProps {\n  prices: PricePoint[];\n  indicators: TechnicalIndicators;\n  isDarkMode: boolean;\n}\n\nexport const TechnicalIndicatorsChart: React.FC<TechnicalIndicatorsChartProps> = ({ \n  prices, indicators, isDarkMode \n}) => {\n  const chartRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!chartRef.current || prices.length === 0 || !window.Plotly) return;\n\n    const dates = prices.map(p => p.date.toISOString().split('T')[0]);\n\n    // Create subplots for different indicators\n    const traces: any[] = [];\n\n    // RSI\n    traces.push({\n      x: dates,\n      y: indicators.rsi,\n      type: 'scatter',\n      mode: 'lines',\n      name: 'RSI',\n      line: { color: '#FF6B6B', width: 2 },\n      yaxis: 'y'\n    });\n\n    // RSI overbought/oversold lines\n    traces.push({\n      x: [dates[0], dates[dates.length - 1]],\n      y: [70, 70],\n      type: 'scatter',\n      mode: 'lines',\n      name: 'Overbought (70)',\n      line: { color: '#FF6B6B', width: 1, dash: 'dash' },\n      yaxis: 'y',\n      showlegend: false\n    });\n\n    traces.push({\n      x: [dates[0], dates[dates.length - 1]],\n      y: [30, 30],\n      type: 'scatter',\n      mode: 'lines',\n      name: 'Oversold (30)',\n      line: { color: '#FF6B6B', width: 1, dash: 'dash' },\n      yaxis: 'y',\n      showlegend: false\n    });\n\n    // MACD\n    traces.push({\n      x: dates,\n      y: indicators.macd.macd,\n      type: 'scatter',\n      mode: 'lines',\n      name: 'MACD',\n      line: { color: '#4ECDC4', width: 2 },\n      yaxis: 'y2'\n    });\n\n    traces.push({\n      x: dates,\n      y: indicators.macd.signal,\n      type: 'scatter',\n      mode: 'lines',\n      name: 'Signal',\n      line: { color: '#FFE66D', width: 2 },\n      yaxis: 'y2'\n    });\n\n    // MACD Histogram\n    traces.push({\n      x: dates,\n      y: indicators.macd.histogram,\n      type: 'bar',\n      name: 'MACD Histogram',\n      marker: {\n        color: indicators.macd.histogram.map(h => h >= 0 ? 'rgba(78, 205, 196, 0.6)' : 'rgba(255, 230, 109, 0.6)')\n      },\n      yaxis: 'y3'\n    });\n\n    const layout = {\n      title: {\n        text: 'Technical Indicators',\n        font: { size: 18, color: isDarkMode ? 'white' : 'black' }\n      },\n      grid: {\n        rows: 3,\n        columns: 1,\n        subplots: [['xy'], ['xy2'], ['xy3']],\n        rowheight: [0.4, 0.3, 0.3]\n      },\n      xaxis: { \n        title: 'Date',\n        gridcolor: isDarkMode ? '#444' : '#ddd'\n      },\n      yaxis: { \n        title: 'RSI',\n        domain: [0.7, 1],\n        range: [0, 100],\n        gridcolor: isDarkMode ? '#444' : '#ddd'\n      },\n      yaxis2: { \n        title: 'MACD',\n        domain: [0.4, 0.7],\n        gridcolor: isDarkMode ? '#444' : '#ddd'\n      },\n      yaxis3: { \n        title: 'MACD Histogram',\n        domain: [0, 0.4],\n        gridcolor: isDarkMode ? '#444' : '#ddd'\n      },\n      paper_bgcolor: isDarkMode ? '#1a1a1a' : 'white',\n      plot_bgcolor: isDarkMode ? '#2d2d2d' : 'white',\n      font: { color: isDarkMode ? 'white' : 'black' },\n      showlegend: true,\n      legend: {\n        x: 0.02,\n        y: 0.98,\n        bgcolor: isDarkMode ? 'rgba(45, 45, 45, 0.8)' : 'rgba(255, 255, 255, 0.8)',\n        bordercolor: isDarkMode ? '#666' : '#ccc'\n      }\n    };\n\n    window.Plotly.newPlot(chartRef.current, traces, layout);\n  }, [prices, indicators, isDarkMode]);\n\n  return <div ref={chartRef} className=\"w-full h-96\" />;\n};\n\ninterface RecommendationsChartProps {\n  recommendations: RecommendationAnalysis;\n  currentPrice: number;\n  isDarkMode: boolean;\n}\n\nexport const RecommendationsChart: React.FC<RecommendationsChartProps> = ({ \n  recommendations, currentPrice, isDarkMode \n}) => {\n  const chartRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!chartRef.current || !window.Plotly) return;\n\n    const categories = ['Technical', 'Fundamental', 'Risk', 'Overall'];\n    const confidences = [\n      recommendations.technical.confidence,\n      recommendations.fundamental.confidence,\n      recommendations.risk.confidence,\n      recommendations.overall.confidence\n    ];\n\n    const colors = confidences.map(conf => {\n      const rec = confidences.indexOf(conf) === 3 ? recommendations.overall : \n                  confidences.indexOf(conf) === 0 ? recommendations.technical :\n                  confidences.indexOf(conf) === 1 ? recommendations.fundamental :\n                  recommendations.risk;\n      \n      if (rec.action === 'BUY') return '#00ff88';\n      if (rec.action === 'SELL') return '#ff4444';\n      return '#ffa500';\n    });\n\n    const traces = [{\n      x: categories,\n      y: confidences,\n      type: 'bar',\n      marker: {\n        color: colors,\n        line: {\n          color: isDarkMode ? '#666' : '#ccc',\n          width: 1\n        }\n      },\n      text: confidences.map(c => c + '%'),\n      textposition: 'auto',\n      textfont: {\n        color: isDarkMode ? 'white' : 'black'\n      }\n    }];\n\n    const layout = {\n      title: {\n        text: 'Recommendation Confidence by Category',\n        font: { size: 18, color: isDarkMode ? 'white' : 'black' }\n      },\n      xaxis: { \n        title: 'Analysis Category',\n        gridcolor: isDarkMode ? '#444' : '#ddd'\n      },\n      yaxis: { \n        title: 'Confidence (%)',\n        range: [0, 100],\n        gridcolor: isDarkMode ? '#444' : '#ddd'\n      },\n      paper_bgcolor: isDarkMode ? '#1a1a1a' : 'white',\n      plot_bgcolor: isDarkMode ? '#2d2d2d' : 'white',\n      font: { color: isDarkMode ? 'white' : 'black' }\n    };\n\n    window.Plotly.newPlot(chartRef.current, traces, layout);\n  }, [recommendations, currentPrice, isDarkMode]);\n\n  return <div ref={chartRef} className=\"w-full h-96\" />;\n};\n\ninterface EducationalMetricsProps {\n  prices: PricePoint[];\n  indicators: TechnicalIndicators;\n  fundamentals: any;\n  recommendations: RecommendationAnalysis;\n  currentPrice: number;\n}\n\nexport const EducationalMetrics: React.FC<EducationalMetricsProps> = ({ \n  prices, indicators, fundamentals, recommendations, currentPrice \n}) => {\n  const [selectedMetric, setSelectedMetric] = useState<string | null>(null);\n\n  const metrics = [\n    {\n      name: 'RSI (Relative Strength Index)',\n      value: indicators.rsi[indicators.rsi.length - 1].toFixed(1),\n      description: 'Measures the speed and magnitude of price changes to identify overbought or oversold conditions.',\n      interpretation: indicators.rsi[indicators.rsi.length - 1] < 30 ? 'Oversold - potential buying opportunity' :\n                     indicators.rsi[indicators.rsi.length - 1] > 70 ? 'Overbought - potential selling opportunity' :\n                     'Neutral - no clear signal',\n      threshold: { low: 30, high: 70, optimal: 50 },\n      isGood: indicators.rsi[indicators.rsi.length - 1] < 30 ? true : \n              indicators.rsi[indicators.rsi.length - 1] > 70 ? false : null,\n      category: 'TECHNICAL' as const\n    },\n    {\n      name: 'P/E Ratio',\n      value: fundamentals.pe?.toFixed(1) || 'N/A',\n      description: 'Price-to-Earnings ratio compares a company\\'s stock price to its earnings per share.',\n      interpretation: fundamentals.pe ? \n        (fundamentals.pe < 15 ? 'Undervalued - potentially good buying opportunity' :\n         fundamentals.pe > 25 ? 'Overvalued - consider selling or waiting' :\n         'Fairly valued - neutral') : 'No data available',\n      threshold: { low: 15, high: 25, optimal: 20 },\n      isGood: fundamentals.pe ? (fundamentals.pe < 15 ? true : fundamentals.pe > 25 ? false : null) : null,\n      category: 'FUNDAMENTAL' as const\n    },\n         {\n       name: 'Volatility',\n       value: (() => {\n         const returns = [];\n         for (let i = 1; i < Math.min(20, prices.length); i++) {\n           returns.push(Math.log(prices[prices.length - i].close / prices[prices.length - i - 1].close));\n         }\n         const mean = returns.reduce((sum, ret) => sum + ret, 0) / returns.length;\n         const variance = returns.reduce((sum, ret) => sum + Math.pow(ret - mean, 2), 0) / returns.length;\n         return (Math.sqrt(variance * 252) * 100).toFixed(1) + '%';\n       })(),\n      description: 'Annualized volatility measures the degree of price variation over time.',\n      interpretation: 'Lower volatility indicates more stable price movement, while higher volatility suggests greater risk and potential reward.',\n      threshold: { low: 15, high: 30, optimal: 20 },\n      isGood: null,\n      category: 'RISK' as const\n    },\n    {\n      name: 'MACD Signal',\n      value: indicators.macd.macd[indicators.macd.macd.length - 1] > indicators.macd.signal[indicators.macd.signal.length - 1] ? 'Bullish' : 'Bearish',\n      description: 'Moving Average Convergence Divergence compares two moving averages to identify momentum changes.',\n      interpretation: indicators.macd.macd[indicators.macd.macd.length - 1] > indicators.macd.signal[indicators.macd.signal.length - 1] ?\n        'MACD above signal line indicates upward momentum' :\n        'MACD below signal line indicates downward momentum',\n      threshold: { low: 0, high: 0, optimal: 0 },\n      isGood: indicators.macd.macd[indicators.macd.macd.length - 1] > indicators.macd.signal[indicators.macd.signal.length - 1],\n      category: 'TECHNICAL' as const\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <h3 className=\"text-2xl font-bold text-slate-900\">Key Metrics Explained</h3>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {metrics.map((metric) => (\n          <div\n            key={metric.name}\n            className={`p-6 rounded-2xl border-2 transition-all duration-200 cursor-pointer ${\n              selectedMetric === metric.name\n                ? 'border-blue-500 bg-blue-50'\n                : metric.isGood === true\n                ? 'border-green-200 bg-green-50'\n                : metric.isGood === false\n                ? 'border-red-200 bg-red-50'\n                : 'border-slate-200 bg-white'\n            }`}\n            onClick={() => setSelectedMetric(selectedMetric === metric.name ? null : metric.name)}\n          >\n            <div className=\"flex justify-between items-start mb-3\">\n              <h4 className=\"font-semibold text-slate-900\">{metric.name}</h4>\n              <div className={`px-3 py-1 rounded-full text-sm font-medium ${\n                metric.isGood === true ? 'bg-green-100 text-green-800' :\n                metric.isGood === false ? 'bg-red-100 text-red-800' :\n                'bg-slate-100 text-slate-800'\n              }`}>\n                {metric.value}\n              </div>\n            </div>\n            \n            <p className=\"text-sm text-slate-600 mb-3\">{metric.description}</p>\n            \n            {selectedMetric === metric.name && (\n              <div className=\"mt-4 p-4 bg-slate-50 rounded-xl\">\n                <p className=\"text-sm font-medium text-slate-700 mb-2\">Interpretation:</p>\n                <p className=\"text-sm text-slate-600\">{metric.interpretation}</p>\n                \n                {metric.threshold.optimal > 0 && (\n                  <div className=\"mt-3\">\n                    <p className=\"text-xs text-slate-500 mb-1\">Thresholds:</p>\n                    <div className=\"flex space-x-4 text-xs\">\n                      <span className=\"text-green-600\">Low: {metric.threshold.low}</span>\n                      <span className=\"text-blue-600\">Optimal: {metric.threshold.optimal}</span>\n                      <span className=\"text-red-600\">High: {metric.threshold.high}</span>\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {/* Overall Recommendation Summary */}\n      <div className=\"mt-8 p-6 bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl border border-blue-200\">\n        <h4 className=\"text-lg font-semibold text-slate-900 mb-3\">Overall Recommendation</h4>\n        <div className=\"flex items-center space-x-4 mb-4\">\n          <div className={`px-4 py-2 rounded-full text-white font-semibold ${\n            recommendations.overall.action === 'BUY' ? 'bg-green-500' :\n            recommendations.overall.action === 'SELL' ? 'bg-red-500' :\n            'bg-yellow-500'\n          }`}>\n            {recommendations.overall.action}\n          </div>\n          <div className=\"text-2xl font-bold text-slate-900\">\n            {recommendations.overall.confidence}% Confidence\n          </div>\n        </div>\n        <p className=\"text-slate-700\">{recommendations.summary}</p>\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}